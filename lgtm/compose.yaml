services:
  grafana:
    image: docker.io/grafana/grafana:12.0.1
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=grafanaManagedRecordingRules
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/dashboards
        /run.sh
    volumes:
      - data_grafana:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    # restart: unless-stopped
    networks:
      - lgtm-stack
  loki:
    container_name: loki
    image: docker.io/grafana/loki:3.5.1
    command: "-config.file=/etc/loki/config.yaml"
    ports:
      - 3100:3100
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
      - data_loki:/loki:rw
    restart: unless-stopped
    networks:
      - lgtm-stack
  alloy:
    image: grafana/alloy:v1.9.1
    container_name: alloy
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    ports:
      - 12345:12345
      - 4318:4318
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy
      - alloy_data:/var/lib/alloy/data
      - /:/rootfs:ro
      - /run:/run:ro
      - /var/log:/var/log:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /run/udev/data:/run/udev/data:ro
      # metrics
      - /var/run/docker.sock.raw:/var/run/docker.sock
      - /proc:/rootproc:ro
      - /dev/disk/:/dev/disk:ro
    environment:
      - CLUSTER_NAME=dev-docker
      - INSTANCE_NAME=${HOSTNAME:-docker-host}
    networks:
      - lgtm-stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      # IMPORTANT: allow Prometheus to RECEIVE remote_write
      - --web.enable-remote-write-receiver
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom-data:/prometheus
    networks:
      - lgtm-stack

volumes:
  data_grafana:
    driver: local
  data_loki:
    driver: local
  alloy_data:
    driver: local
  prom-data:
    driver: local

networks:
  lgtm-stack:
    driver: bridge
